public class Solution {
    public string MinWindow(string s, string t) {
        if(s.Length == 0 || t.Length > s.Length)
            return "";
        
        int minLength = int.MaxValue;
        int startIndex = 0;
        int left = 0; 
        int right = 0;
        int count = t.Length;
        int[] map = new int[128];

        foreach(char c in t){
            map[c]++;
        }
            

        while(right < s.Length){
            if(map[s[right]] >0)
                count--;
            map[s[right]]--;
            right++;
            
            while(count == 0){
                if(right - left < minLength)
                {
                    minLength = right - left;
                    startIndex = left;
                }
            
                
                if(map[s[left]] == 0)
                    count++;
                map[s[left]]++;
                left++;
            }
        }
        if(minLength == int.MaxValue)
            return "";
        return s.Substring(startIndex, minLength);
    }
}